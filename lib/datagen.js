// datagen.jsconst root = process.cwd()const userDao = require(root + '/lib/dao/userDao')const moviesDao = require(root + '/lib/dao/moviesDao')function addUsers (data) {    let promises = []    data['users'].forEach((user) =>{        promises.push(userDao.insert(user))    })    return promises}function addMovies (data) {    let promises = []    data['movies'].forEach((movie) =>{        promises.push(moviesDao.insert(movie))    })    return promises}function loadFixture (dataset) {    let promises = []    if ('users' in dataset) {        promises = promises.concat(addUsers(dataset))    }    if ('movies' in dataset) {        promises = promises.concat(addMovies(dataset))    }    return Promise.all(promises).catch((e) => {        if (e) {            if (e.name == 'ValidationError') {                for (let field in e.errors) {                    console.log(e.errors[field].message);                }            }        }        return Promise.reject(new Error(e))    })}function deleteAllDocs () {    return Promise.all([        userDao.remove(),        moviesDao.remove()    ])}function clear () {    return deleteAllDocs().then(function () {        Promise.resolve()    })}exports.clear = clearexports.loadData = loadFixture